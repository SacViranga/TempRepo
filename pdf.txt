import React, { useState, useEffect, useRef } from 'react';
import { Worker, Viewer } from '@react-pdf-viewer/core'; // PDF viewer
import '@react-pdf-viewer/core/lib/styles/index.css'; // Import the CSS file for the viewer

const PdfViewer = ({ base64 }) => {
    const [pdfUrl, setPdfUrl] = useState(null);
    const [dimensions, setDimensions] = useState({ width: '100%', height: '750px' });
    const containerRef = useRef(null);

    useEffect(() => {
        // Convert base64 to Blob and create URL
        const byteCharacters = atob(base64);
        const byteNumbers = new Array(byteCharacters.length);
        for (let i = 0; i < byteCharacters.length; i++) {
            byteNumbers[i] = byteCharacters.charCodeAt(i);
        }
        const byteArray = new Uint8Array(byteNumbers);
        const blob = new Blob([byteArray], { type: 'application/pdf' });
        const url = URL.createObjectURL(blob);
        setPdfUrl(url);

        // Cleanup URL object
        return () => URL.revokeObjectURL(url);
    }, [base64]);

    // Update dimensions when the window or parent container is resized
    useEffect(() => {
        const updateDimensions = () => {
            if (containerRef.current) {
                const { clientWidth, clientHeight } = containerRef.current;
                setDimensions({
                    width: `${clientWidth}px`,
                    height: `${clientHeight}px`
                });
            }
        };

        // Initial dimensions update
        updateDimensions();

        // Add resize event listener
        window.addEventListener('resize', updateDimensions);

        // Cleanup listener on unmount
        return () => window.removeEventListener('resize', updateDimensions);
    }, []);

    return (
        <div ref={containerRef} style={{ width: '100%', height: '100%', overflow: 'auto' }}>
            {pdfUrl ? (
                <Worker workerUrl={`https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.min.js`}>
                    <Viewer
                        fileUrl={pdfUrl}
                        style={{ width: dimensions.width, height: dimensions.height }}
                    />
                </Worker>
            ) : (
                <div>Loading PDF...</div>
            )}
        </div>
    );
};

export default PdfViewer;
